name: PR and List Open PRs

on:
  push:
    branches:
      - test

jobs:
  check-or-create-pr:
    name: Check or Create PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          echo "GITHUB_REPOSITORY=${{ github.repository }}" >> $GITHUB_ENV
          echo "REPO_OWNER=$(echo ${{ github.repository }} | cut -d'/' -f1)" >> $GITHUB_ENV
          echo "REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_ENV
          echo "TEST_BRANCH=test" >> $GITHUB_ENV
          echo "DEV_BRANCH=dev" >> $GITHUB_ENV

      - name: Check if PR exists from test to dev using GraphQL
        id: check-pr
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          REPO_OWNER: ${{ env.REPO_OWNER }}
          REPO_NAME: ${{ env.REPO_NAME }}
        run: |
          # GraphQL query to check if a PR exists from test to dev
          QUERY='
          {
            repository(owner: "'${{ env.REPO_OWNER }}'", name: "'${{ env.REPO_NAME }}'") {
              pullRequests(states: OPEN, baseRefName: "'${{ env.DEV_BRANCH }}'", headRefName: "'${{ env.TEST_BRANCH }}'", first: 1) {
                edges {
                  node {
                    id
                    title
                  }
                }
              }
            }
          }'

          # Send the GraphQL request
          PR_RESPONSE=$(curl -s -H "Authorization: bearer $GITHUB_TOKEN" -X POST -d "{\"query\":\"$QUERY\"}" https://api.github.com/graphql)

          # Debug output
          echo "PR Response: $PR_RESPONSE"

          # Check if a PR was found
          if echo "$PR_RESPONSE" | grep -q '"edges":[]'; then
            echo "No open PR found from test to dev."
            echo "exists=false" >> $GITHUB_ENV  # Set output in environment file
          else
            echo "Open PR found from test to dev."
            echo "exists=true" >> $GITHUB_ENV  # Set output in environment file
          fi

      - name: Create PR from test to dev using GraphQL
        if: env.exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
          REPO_OWNER: ${{ env.REPO_OWNER }}
          REPO_NAME: ${{ env.REPO_NAME }}
        run: |
          # Mutation to create a new pull request using GraphQL
          MUTATION='
          mutation {
            createPullRequest(input: {repositoryId: "'$(echo ${{ secrets.TOKEN }} | cut -d'/' -f1)'", headRefName: "'${{ env.TEST_BRANCH }}'", baseRefName: "'${{ env.DEV_BRANCH }}'", title: "PR from test to dev", body: "Automatically created PR"}) {
              pullRequest {
                id
                title
              }
            }
          }'

          CREATE_PR_RESPONSE=$(curl -s -H "Authorization: bearer $GITHUB_TOKEN" -X POST -d "{\"query\":\"$MUTATION\"}" https://api.github.com/graphql)

          # Check for errors in response
          if echo "$CREATE_PR_RESPONSE" | grep -q '"errors":'; then
            echo "Error creating PR: $CREATE_PR_RESPONSE"
            exit 1
          else
            echo "PR created successfully!"
          fi

  # Add any subsequent jobs here, if needed
