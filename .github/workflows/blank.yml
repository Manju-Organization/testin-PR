name: PR and List Open PRs

on:
  push:
    branches:
      - test

jobs:
  check-or-create-pr:
    name: Check or Create PR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set environment variables
        run: |
          echo "GITHUB_REPOSITORY=${{ github.repository }}" >> $GITHUB_ENV
          echo "TEST_BRANCH=test" >> $GITHUB_ENV
          echo "DEV_BRANCH=dev" >> $GITHUB_ENV

      - name: Check if PR exists from test to dev using GraphQL
        id: check-pr
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          # GraphQL query to check if a PR exists from test to dev
          QUERY='
          {
            repository(owner: "${{ github.repository_owner }}", name: "${{ github.event.repository.name }}") {
              pullRequests(states: OPEN, baseRefName: "dev", headRefName: "test", first: 1) {
                edges {
                  node {
                    id
                    title
                  }
                }
              }
            }
          }'
          
          PR_RESPONSE=$(curl -s -H "Authorization: bearer $GITHUB_TOKEN" -X POST -d "{\"query\":\"$QUERY\"}" https://api.github.com/graphql)
          
          # Check if a PR was found by searching for "edges" in the response
          if echo "$PR_RESPONSE" | grep -q '"edges":[]'; then
            echo "No open PR found."
            echo "::set-output name=exists::false"
          else
            echo "Open PR found."
            echo "::set-output name=exists::true"
          fi

      - name: Create PR from test to dev using GraphQL
        if: steps.check-pr.outputs.exists == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        run: |
          # Mutation to create a new pull request using GraphQL
          MUTATION='
          mutation {
            createPullRequest(input: {repositoryId: "${{ github.event.repository.node_id }}", headRefName: "test", baseRefName: "dev", title: "PR from test to dev", body: "Automatically created PR"}) {
              pullRequest {
                id
                title
              }
            }
          }'
          
          curl -s -H "Authorization: bearer $GITHUB_TOKEN" -X POST -d "{\"query\":\"$MUTATION\"}" https://api.github.com/graphql

  
