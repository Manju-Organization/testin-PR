name: List All Branches with Existing Status in Organization

on:
  workflow_dispatch:

jobs:
  list-branches:
    runs-on: ubuntu-latest
    steps:
      - name: Set up environment variables
        env:
          ORG: Manju-Organization  # Replace with your organization name
          TOKEN: ${{ secrets.TOKEN }}
          OUTPUT_FILE: branches_list.csv
        run: |
          # Initialize CSV file
          echo "Repository,Branch,Status" > $OUTPUT_FILE
          
          # Set pagination variables for repositories
          REPO_PAGE=1
          REPO_PER_PAGE=100

          # Loop through each page of repositories
          while :; do
            # Fetch repositories in the organization
            REPOS=$(curl -s -H "Authorization: token $TOKEN" "https://api.github.com/orgs/$ORG/repos?per_page=$REPO_PER_PAGE&page=$REPO_PAGE" | grep '"name"' | cut -d '"' -f 4)
            
            # Break if no more repositories are found
            [ -z "$REPOS" ] && break
            
            # Process each repository
            for REPO in $REPOS; do
              echo "Processing repository: $REPO"
              
              # Set branch pagination variables
              BRANCH_PAGE=1
              BRANCH_PER_PAGE=100

              # Loop through each page of branches for the repository
              while :; do
                # Fetch branches for each repository with their status if available
                BRANCHES=$(curl -s -H "Authorization: token $TOKEN" "https://api.github.com/repos/$ORG/$REPO/branches?per_page=$BRANCH_PER_PAGE&page=$BRANCH_PAGE")
                
                # Break if no more branches are found
                [ "$(echo "$BRANCHES" | wc -c)" -le 5 ] && break
                
                # Process each branch
                echo "$BRANCHES" | grep '"name"' | cut -d '"' -f 4 | while read -r BRANCH_NAME; do
                  # Fetch the existing branch status
                  # Assuming an endpoint or custom logic to retrieve status here
                  STATUS=$(curl -s -H "Authorization: token $TOKEN" "https://api.github.com/repos/$ORG/$REPO/branches/$BRANCH_NAME" | jq -r '.status')

                  # If no status is found, mark it as "Unknown"
                  STATUS=${STATUS:-"Unknown"}

                  # Append entry to CSV file
                  echo "$REPO,$BRANCH_NAME,$STATUS" >> $OUTPUT_FILE
                done

                # Increment branch page for the next batch
                BRANCH_PAGE=$((BRANCH_PAGE + 1))
              done
            done

            # Increment repository page for the next batch
            REPO_PAGE=$((REPO_PAGE + 1))
          done

      - name: Upload CSV file
        uses: actions/upload-artifact@v3
        with:
          name: branches_list.csv
          path: branches_list.csv
